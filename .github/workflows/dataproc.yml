name: Daily Data Processing Workflow

on:
  schedule:
    - cron: '0 21 * * *'  # 9 PM UTC daily
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run_scripts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run slackintegrationgit.py
        run: python slackintegrationgit.py
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Check if PDF was created
        id: check_pdf
        run: |
          if ls hcmsupportbot_*.pdf 1> /dev/null 2>&1; then
            echo "pdf_exists=true" >> $GITHUB_OUTPUT
          else
            echo "pdf_exists=false" >> $GITHUB_OUTPUT
            echo "No PDF generated. Exiting workflow."
            exit 0
          fi

      - name: Delete existing s3_document_store.pkl
        if: steps.check_pdf.outputs.pdf_exists == 'true'
        run: |
          if [ -f s3_document_store.pkl ]; then
            rm s3_document_store.pkl
          fi

      - name: Run chromaraggit.py
        if: steps.check_pdf.outputs.pdf_exists == 'true'
        run: python chromaraggit.py
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Run app.py
        if: steps.check_pdf.outputs.pdf_exists == 'true'
        run: python app.py
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Commit and push changes
        if: steps.check_pdf.outputs.pdf_exists == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add s3_document_store.pkl
          git commit -m "Update s3_document_store.pkl $(date)"
          git push
