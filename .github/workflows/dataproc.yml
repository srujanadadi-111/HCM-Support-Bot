name: Daily Data Processing Workflow

on:
  schedule:
    - cron: '0 21 * * *'  # 9 PM UTC daily
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run_scripts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run slackintegrationgit.py and capture output
        id: slack
        run: |
          python slackintegrationgit.py | tee slack_output.log
          # Check if PDF was generated and uploaded
          if grep -q "Uploaded hcmsupportbot_" slack_output.log; then
            echo "pdf_status=generated" >> $GITHUB_OUTPUT
          elif grep -q "No messages found for today." slack_output.log; then
            echo "pdf_status=none" >> $GITHUB_OUTPUT
          else
            echo "pdf_status=error" >> $GITHUB_OUTPUT
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Delete existing s3_document_store.pkl
        run: |
          if [ -f s3_document_store.pkl ]; then
            rm s3_document_store.pkl
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git add -u s3_document_store.pkl
            git commit -m "Delete s3_document_store.pkl"
            git pull --rebase origin main
            git push
          fi

      - name: Run chromaraggit.py
        if: steps.slack.outputs.pdf_status == 'generated'
        run: python chromaraggit.py
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Run app.py
        if: steps.slack.outputs.pdf_status == 'generated'
        run: python app.py
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Commit and push changes
        if: steps.slack.outputs.pdf_status == 'generated'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add s3_document_store.pkl
          git commit -m "Update s3_document_store.pkl $(date)"
          git push
